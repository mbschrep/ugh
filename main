import requests 
from bs4 import BeautifulSoup 
import pandas as pd
import sqlite3
import numpy as np
import matplotlib.pyplot as plt

url = "https://www.worldometers.info/coronavirus/"
response = requests.get(url)

if response.status_code == 200:
    soup = BeautifulSoup(response.content, 'html.parser')

    def extract_row_data(row):
        columns = row.find_all('td')
        country = columns[1].text.strip()
        total_cases = columns[2].text.strip()
        total_deaths = columns[4].text.strip()
        total_recovered = columns[6].text.strip()
        return [country, total_cases, total_deaths, total_recovered]

    table = soup.find('table')

    data_rows = table.find_all('tr')[2:12]
    top_10_countries_data = [extract_row_data(row) for row in data_rows]

    top_10_cases_df = pd.DataFrame(top_10_countries_data, columns=['country', 'total_cases', 'total_deaths', 'total_recovered'])

    top_10_cases_df.to_csv('top_10_cases.csv', index=False)

    top_10_cases_df = pd.read_csv('top_10_cases.csv')

    conn = sqlite3.connect("top_10_cases.csv.db")
    cur = conn.cursor()

    cur.execute("""
    CREATE TABLE IF NOT EXISTS cases (
    id INTEGER PRIMARY KEY,
    country TEXT,
    total_cases TEXT
    );
    """)

    conn.commit()
    
    cur.execute("""
    CREATE TABLE IF NOT EXISTS deaths (
        id INTEGER PRIMARY KEY,
        country TEXT,
        total_deaths TEXT,
        total_recovered TEXT
    );
    """)

    conn.commit()

    cur.execute("""
    UPDATE cases
    SET `total_cases` = 0
    WHERE `total_cases` IS NULL;
    """)
    
    conn.commit()

    cur.execute("""
    UPDATE deaths
    SET `total_deaths` = 0
    WHERE `total_deaths` IS NULL;
    """)

    cur.execute("""
    UPDATE deaths
    SET `total_recovered` = 0
    WHERE `total_recovered` IS NULL;
    """)

    conn.commit()

    sql_query = "SELECT * FROM cases JOIN deaths ON cases.country = deaths.country"
    sqlread = pd.read_sql_query(sql_query, conn)
    print("SQL query result:")
    print(sqlread)


    data_frame = pd.read_csv('combined.csv')
    
    # Add print statements to debug
    print("Data frame after reading from CSV:")
    print(data_frame)
    
    x = data_frame.mean()
    print(x)

    y = data_frame.median()
    print(y)

    def find_modes(data_frame):
        modes = {}
        for column in data_frame.columns:
            mode = data_frame[column].mode()
            modes[column] = mode.tolist()
        return modes

    z = find_modes(data_frame)
    print(z)

    a = data_frame.std()
    print(a)

    data_frame["total_cases"].plot(kind='bar')
    plt.show()

else:
    print("Failed to retrieve data from the website")

    sqlread.to_csv('combined.csv', index=False)

    data_frame = pd.read_csv('combined.csv')
    
    x = data_frame.mean()
    print(x)

    y = data_frame.median()
    print(y)

    def find_modes(data_frame):
        modes = {}
        for column in data_frame.columns:
            mode = data_frame[column].mode()
            modes[column] = mode.tolist()
        return modes

    z = find_modes(data_frame)
    print(z)

    a = data_frame.std()
    print(a)

    data_frame["Total Cases"].plot()
    plt.show()

else:
    print("Failed to retrieve data from the website")
